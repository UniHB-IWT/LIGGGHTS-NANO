//#**************************************************************
//#
//# filename:             options_auto.h 
//#
//# author:               Gerstmayr, Reischl, Saxinger
//#
//# generated:	
//# description: 
//# remarks:		
//#
//# Copyright (c) 2003-2013 Johannes Gerstmayr, Linz Center of Mechatronics GmbH, Austrian
//# Center of Competence in Mechatronics GmbH, Institute of Technical Mechanics at the 
//# Johannes Kepler Universitaet Linz, Austria. All rights reserved.
//#
//# This file is part of HotInt.
//# HotInt is free software: you can redistribute it and/or modify it under the terms of 
//# the HOTINT license. See folder "licenses" for more details.
//#
//# bug reports are welcome!!!
//# WWW:		www.hotint.org
//# email:	bug_reports@hotint.org or support@hotint.org
//#***************************************************************************************

//File automatically generated by Octave/Matlab script "documentation/autogeneration/generate_options_fn"!
//Do not manually change this file, because it will be overwritten
//Initialisation of the IOptions/DOptions/TOptions can be made in the tabular file "documentation/autogeneration/options_forautogen.txt"!
#ifndef OPTIONS_AUTO__H
#define OPTIONS_AUTO__H

void NumNLSys::InitializeOptionsAuto()
{
  SetIOption(180,0);	// Print general solver information. This includes: Newtons relative error goal, contractivity, iteration error, and qualitative information about Jacobian-updates, as well as iteration error and number of newton iterations at each post newton step, and post newton iterations at each time step.
  SetIOption(187,0);	// Print condition number of Jacobi matrix in Newtons method whenever it is updated.
  SetIOption(181,0);	// Print Jacobi matrix of Newtons method whenever it is updated.
  SetIOption(182,0);	// Print iterated residual vector at each Newton step.
  SetIOption(183,0);	// Print iterated solution vector at each Newton step.
  SetIOption(184,0);	// Print data vector at each nonlinear iteration step.
  SetIOption(185,0);	// Print solution increment of each step (dynamic simulation: time step, static simulation: load step).
  SetIOption(186,0);	// Print solution vector of each step (dynamic simulation: time step, static simulation: load step).
  SetIOption(190,0);	// Print general information on parsed objects (e.g., while reading modeldata or configuration files).
  SetIOption(199,6);	// 0..no output; 1..necessary output (Errors, start/end simulation); 2..almost necessary output (Warnings); 3..multiple simulation  output (parameter variation/optimization); 4..simulation output (solver); 5..extended output (useful information); 6..complete information; 7..debug level 1; 8..debug level 2; 9..max output.
  SetIOption(198,8);	// number of significant digits of a double in output window and logfile.
  SetIOption(197,6);	// number of significant digits of a vector in output window and logfile.
  SetIOption(196,10);	// number of significant digits of a matrix in output window and logfile.
  SetIOption(195,100);	// Number of displayed error messages.
  SetIOption(194,100);	// Number of displayed warning messages.
  SetDOption(199,2);	// Write computation output every x seconds; notice: if solver logs are printed, then this option does not take effect.
  SetIOption(193,0);	// Write the initial mass and stiffness matrices in Matlab format to files Mmat.dat and Kmat.dat, in Matlab directory.
  SetTOption(199,"hotint.log");	// Default filename for hotint log file.
  SetDOption(198,10);	// critical log file size, after which a warning is displayed; in megabytes.
  SetIOption(192,7);	// 0..no output; 1..necessary output (Errors, start/end simulation); 2..almost necessary output (Warnings); 3..multiple simulation  output (parameter variation/optimization); 4..simulation output (solver); 5..extended output (useful information); 6..complete information; 7..debug level 1; 8..debug level 2; 9..max output.
  SetIOption(220,0);	// 1|(0) ... (Don't) automatically close application after computation.
  SetIOption(221,1);	// 1|(0) ... 1 .. show HOTINT window (minimized).
  SetIOption(222,0);	// immediately start computation on program start
  SetIOption(223,0);	// 1|(0) ... (Don't) remove experimental menu items.
  SetIOption(224,0);	// 1|(0) ... (Don't) reload the last saved model on program start
  SetIOption(225,1);	// 1|(0) ... (Don't) save the model automatically before each change of an object
  SetTOption(101,"");	// Path of the application.
  SetTOption(102,"");	// Path to recorded image files.
  SetTOption(103,"");	// Path of Hotint Input Data file.
  SetTOption(120,"");	// Path to store single images (record frame dialog)
  SetTOption(122,"");	// Path to store video images series (recoed frame dialog)
  SetTOption(124,"");	// Path to store plottool images (plottool dialog
  SetTOption(110,"");	// Name of Hotint Input Data file.
  SetTOption(112,"---No Function---");	// Name of internal model function (cpp).
  SetTOption(113,"");	// Recent file filename 1.
  SetTOption(114,"");	// Recent file filename 2.
  SetTOption(115,"");	// Recent file filename 3.
  SetTOption(116,"");	// Recent file filename 4.
  SetTOption(117,"");	// Recent file filename 5.
  SetIOption(170,1);	// Enable this function to allow 'hotint_input_data_filename' with ending '.txt' as first argument (for drag and drop).
  SetIOption(120,1);	// 1|(0) ... (Don't) use degrees instead of radiant in edit dialogs for bodies and joints.
  SetIOption(140,0);	// Rotation input mode: 0=Euler angles, 1=Rotation X/Y/Z, 2=Euler parameters.
  SetIOption(143,0);	// Units of legend: 0=SI(m,N, etc.); 1=mm, N, etc.
  SetIOption(152,50000);	// Maximum text length (number of characters) for output text window, use -1 for no limit
  SetIOption(115,1);	// 1|(0) ... (Don't) start animation from beginning.
  SetIOption(109,1);	// Animation frames: show every N'th frame at animation.
  SetIOption(150,0);	// 1|(0) ... (Don't) animate deformation scaling.
  SetIOption(153,0);	// 1 ... animate deformation (eigenmodes) only for one cycle - for recording; 0 ... endless animate
  SetIOption(163,0);	// 1|(0) ... (Don't) record frames
  SetIOption(164,0);	// for each saved frame, call conversion program (Image Magick)
  SetIOption(165,0);	// 1|(0) ... (Don't) show frame numbers in images);
  SetIOption(166,1);	// record every x frames
  SetTOption(121,"snapshot");	// name of the single frame file without extensions
  SetTOption(123,"frame");	// name of the video frame file without extensions and number
  SetIOption(167,0);	// format of the exported file (default setting for radiobutton) 0..JPG, 1..PNG, 2..BMP
  SetIOption(168,0);	// includes the output window to the screenshot
  SetIOption(104,4);	// Redraw frequency: 0..off, 1..draw last frame, 2..100sec, 3..20sec, 4..2sec, 5..200ms, 6..50ms, 7..20ms, 8..every 10 frames, 9..every frame.
  SetIOption(131,1);	// 1|(0) ... (Don't) draw background objects transparent.
  SetDOption(119,2.);	// GeomElement (outline) line thickness ****.
  SetDOption(114,1.);	// Global_line_thickness (coord system, etc.) ****.
  SetDOption(117,2.);	// Global point size (coord system, grid, etc.) ****.
  SetIOption(122,1);	// 1|(0) ... (Don't) show 3D texts in front.
  SetIOption(106,1);	// 1|(0) ... (Don't) draw coordinate system in origin (X0, Y0, Z0).
  SetDOption(103,0.5);	// Size of origin.
  SetIOption(126,0);	// Show Grid and Background planes (add up), 1=XY, 2=XZ, 4=YZ.
  SetDOption(107,0.);	// X-position for interesction point of planes
  SetDOption(108,0.);	// Y-position for interesction point of planes
  SetDOption(109,0.);	// Z-position for interesction point of planes
  SetDOption(112,2.);	// X-size of background plane
  SetDOption(113,2.);	// Y-size of background plane
  SetDOption(142,2.);	// Z-size of background plane
  SetDOption(110,0.1);	// Grid discretization X-direction
  SetDOption(111,0.1);	// Grid discretization Y-direction
  SetDOption(143,0.1);	// Grid discretization Z-direction
  SetDOption(144,0.1);	// Transparency factor for the backgruond planes
  SetDOption(133,0.85);	// Red color channel for XY plane
  SetDOption(134,0.85);	// Green color channel for XY plane
  SetDOption(135,0.85);	// Blue color channel for XY plane
  SetDOption(136,0.95);	// Red color channel for XZ plane
  SetDOption(137,0.95);	// Green color channel for XZ plane
  SetDOption(138,0.95);	// Blue color channel for XZ plane
  SetDOption(139,0.95);	// Red color channel for YZ plane
  SetDOption(140,0.95);	// Green color channel for YZ plane
  SetDOption(141,0.95);	// Blue color channel for YZ plane
  SetIOption(149,0);	// 1|(0) ... Use (Don't use) cutting plane.
  SetDOption(125,1.);	// Cutting plane normal-X.
  SetDOption(126,0.);	// Cutting plane normal-Y.
  SetDOption(127,0.);	// Cutting plane normal-Z.
  SetDOption(128,0.);	// Cutting plane distance.
  SetIOption(156,0);	// 1|(0) ... Use (Don't use) cutting plane.
  SetDOption(129,1.);	// Cutting plane 2 normal-X.
  SetDOption(130,0.);	// Cutting plane 2 normal-Y.
  SetDOption(131,0.);	// Cutting plane 2 normal-Z.
  SetDOption(132,0.);	// Cutting plane 2 distance.
  SetIOption(158,1);	// 1|(0) ... (Don't) cut bodies.
  SetIOption(159,1);	// 1|(0) ... (Don't) cut alternative shapes of bodies.
  SetIOption(161,1);	// 1|(0) ... (Don't) cut background.
  SetIOption(157,0);	// 1|(0) ... (Don't) use OpenGL for handling cutting planes.
  SetIOption(119,0.);	// use of cutting plane does trigger a change of drawn surfaceelements
  SetIOption(200,1);	// Rotation axis for standard view angle_1 (rotation axis 1, 2 or 3).
  SetIOption(201,2);	// Rotation axis for standard view angle_2 (rotation axis 1, 2 or 3).
  SetIOption(202,3);	// Rotation axis for standard view angle_3 (rotation axis 1, 2 or 3).
  SetIOption(203,1);	// Rotation axis for standard view angle2_1 (rotation axis 1, 2 or 3).
  SetIOption(204,2);	// Rotation axis for standard view angle2_2 (rotation axis 1, 2 or 3).
  SetIOption(205,3);	// Rotation axis for standard view angle2_3 (rotation axis 1, 2 or 3).
  SetDOption(200,0.);	// Standard view angle_1.
  SetDOption(201,0.);	// Standard view angle_2.
  SetDOption(202,0.);	// Standard view angle_3.
  SetDOption(203,0.);	// standard view angle2_1.not used yet.
  SetDOption(204,0.);	// Standard view angle2_2.not used yet.
  SetDOption(205,0.);	// Standard view angle2_3.not used yet.
  SetIOption(132,1);	// 1|(0) ... (Don't) draw bodies supersmooth.
  SetIOption(133,1);	// 1|(0) ... (Don't) show bodies outline.
  SetIOption(134,1);	// 1|(0) ... (Don't) show bodies faces.
  SetDOption(115,1.);	// Rigid body (outline) line thickness ****.not used yet.
  SetIOption(251,1);	// 1|(0) ... (Don't) draw center of gravity
  SetIOption(258,12);	// Draw resolution for Rigid3D.
  SetDOption(259,1);	// Cog_factor for Rigid3D (default: 1).
  SetIOption(123,0);	// 1|(0) ... (Don't) show element body numbers.
  SetIOption(125,0);	// 1|(0) ... (Don't) show local body frame.
  SetIOption(128,1);	// 1|(0) ... (Don't) draw bodies transparent.
  SetDOption(104,0.);	// Body local frame size.
  SetDOption(105,1.);	// Deformation scale factor.
  SetIOption(151,0);	// 1|(0) ... (Don't) use deformation scale factor in animation.
  SetIOption(154,0);	// 1|(0) ... (Don't) show velocity vector, e.g. for particles.
  SetIOption(162,0);	// 1|(0) ... (Don't) show velocity vector for particles only.
  SetIOption(116,1);	// 1: constant scaling (a), 2: linear scaling (ax), 3: exponential scaling (a(1-exp(-x/b))).
  SetDOption(154,1);	// magnification factor; e.g., if velocity_vector_scaling_mode == 2: velocity vector length = v*velocity_vector_scaling_a.
  SetDOption(153,1);	// knee factor; e.g., if velocity_vector_scaling_mode == 3: velocity vector length = velocity_vector_scaling_a*(1-exp(-v/velocity_vector_scaling_b)).
  SetDOption(152,1);	// thickness scaling factor; independent from mode.
  SetDOption(156,1);	// factor for scaling the displacements.
  SetDOption(155,1);	// factor for adjusting the size of particles while drawing.
  SetIOption(155,1);	// draw every n-th particle only.
  SetIOption(111,1);	// 1|(0) ... (Don't) show solution in mesh as contour plot.
  SetIOption(100,0);	// 1|(0) ... Max. stress is (not) updated during computation.
  SetDOption(100,0.);	// Value of max. stress.
  SetIOption(101,0);	// 1|(0) ... Min. stress is (not) updated during computation.
  SetDOption(101,0.);	// Value of min. stress.
  SetTOption(107,"");	// Name of the field variable, which is currently selected for contour plotting.
  SetIOption(102,0);	// 1|(0) ... (Don't) update the range of the variable each time a new scene is plotted.
  SetIOption(103,10);	// Color tiling (used for FE-color texture).
  SetIOption(160,3);	// number of digits for the numbers in label.
  SetIOption(118,0);	// 1|(0) ... (Don't) draw Stress/strain/etc. interpolated at nodes.
  SetIOption(105,0);	// 1|(0) ... (Don't) draw grey colors for finite elements.
  SetIOption(107,0);	// 1|(0) ... (Don't) invert colors.
  SetIOption(108,0);	// 1|(0) ... (Don't) create nonlinear distributed color legend.
  SetIOption(141,0);	// 1|(0) ... (Don't) hide color legend.
  SetIOption(136,16);	// Axis tiling (for element face and outline, beams and plates).
  SetIOption(137,8);	// Axis resolution: contour plot resolution along axis, beams and plates.
  SetIOption(138,4);	// Cross-section resolution: contour plot resolution at cross-section, beams and plates.
  SetIOption(139,2);	// Contour plot resolution for solid finite elements.
  SetIOption(145,1);	// 1|(0) ... (Don't) draw nodes.
  SetIOption(148,0);	// 1|(0) ... (Don't) show node numbers.
  SetIOption(147,3);	// Node resolution for drawing.
  SetDOption(124,0.001);	// Draw node size.
  SetIOption(110,1);	// 1|(0) ... (Don't) show mesh of finite element.
  SetIOption(117,0);	// 1|(0) ... (Don't) draw Plate elements flat, only midplane (view from top only).
  SetIOption(146,1);	// 1|(0) ... (Don't) draw surface elements only.
  SetDOption(102,1.);	// Finite element line thickness (outline of 2D and 3D beam, plate).
  SetDOption(106,1.);	// Shrinking factor.
  SetIOption(121,1);	// 1|(0) ... (Don't) show joints/connectors.
  SetIOption(144,0);	// 1|(0) ... (Don't) draw control elements in 3D Window..
  SetIOption(124,0);	// 1|(0) ... (Don't) show constraint number.
  SetIOption(114,1);	// 1|(0) ... (Don't) show constraint faces --> show constraint faces.
  SetIOption(129,1);	// 1|(0) ... (Don't) draw constraints transparent.
  SetIOption(135,1);	// 1|(0) ... (Don't) draw constraints outline **** --> faces is IOption 114.not used yet.
  SetDOption(116,1);	// Constraint (outline) line thickness ****.not used yet.
  SetIOption(113,1);	// 1|(0) ... (Don't) draw circles at contact of bodies.
  SetIOption(112,1);	// 1|(0) ... (Don't) show contact points.
  SetDOption(171,1);	// global scalar constraint draw size (e.g.radius)
  SetDOption(172,1);	// global draw axis length of constraint
  SetDOption(173,16);	// global constraint draw resolution
  SetIOption(142,0);	// 1|(0) ... (Don't) show loads.
  SetDOption(120,0.1);	// Size of arrow for drawing of loads.
  SetDOption(121,0.6);	// Red-value for drawing of loads (use values between 0. and 1.).
  SetDOption(122,0.6);	// Green-value for drawing of loads (use values between 0. and 1.).
  SetDOption(123,0.);	// Blue-value for drawing of loads (use values between 0. and 1.).
  SetIOption(127,0);	// 1|(0) ... (Don't) show sensors.
  SetIOption(130,1);	// 1|(0) ... (Don't) draw sensors transparent.
  SetDOption(118,0.2);	// Sensor origin size.
  SetIOption(206,1);	// OpenGL lighting.
  SetIOption(207,1);	// OpenGL SMOOTH ShadeModel smooth.
  SetIOption(212,1);	// Immediate apply in openGL dialog.
  SetIOption(213,0);	// OpenGL cull (means: exclude) 1=front 2=back or 3=both views on faces of polygons; 0=don't cull any view.
  SetDOption(206,0.8);	// Global transparency for SetColor, 1=no translucency, 0=fully transparent.
  SetDOption(219,60.);	// Material shininess (0..128).
  SetDOption(220,1.);	// Material specular color intensity.
  SetIOption(208,1);	// OpenGL enable light1.
  SetIOption(210,0);	// OpenGL light1 mode (0=standard, 1=use light position).
  SetDOption(207,.25);	// Light1 ambient parameter.
  SetDOption(208,.40);	// Light1 diffuse parameter.
  SetDOption(209,.40);	// Light1 specular parameter.
  SetDOption(213,1.);	// Light1 posx.
  SetDOption(214,1.);	// Light1 posy.
  SetDOption(215,-1.);	// Light1 posz.
  SetIOption(209,1);	// OpenGL enable light2.
  SetIOption(211,0);	// OpenGL light2 mode (0=standard, 1=use light position).
  SetDOption(210,.25);	// Light2 ambient parameter.
  SetDOption(211,.40);	// Light2 diffuse parameter.
  SetDOption(212,0.);	// Light2 specular parameter.
  SetDOption(216,0.);	// Light2 posx.
  SetDOption(217,3.);	// Light2 posy.
  SetDOption(218,2.);	// Light2 posz.
  SetIOption(254,1);	// 1|(0) .. (Don't) activate HOTINT-plottool.
  SetIOption(255,0);	// 1|(0) .. (Don't) redraw in regular intervals
  SetDOption(255,30.);	// redraw every x seconds
  SetIOption(257,1);	// 1|(0) .. (Don't) rescale to fully fit the whole data when updated
  SetDOption(256,1.25);	// factor to in-/decrease font size of title in respect to axis font
  SetDOption(257,0.7);	// factor to in-/decrease font size of ticks in respect to axis font
  SetIOption(256,4);	// line thickness (border) in logical points
  SetDOption(258,1.);	// scaling factor for all plotted lines
  SetIOption(259,0);	// 1|(0) .. (Don't) show status bar information.
  SetIOption(290,0);	// 1|(0) .. (Don't) skip several datapoints in draw routine)
  SetIOption(291,100);	// draw every nth datapoint (0 for every)
  SetIOption(292,0);	// 1|(0) .. (Don't) skip marking of several datapoints in draw routine)
  SetIOption(293,100);	// mark every nth datapoint (0 for every)
  SetIOption(294,0);	// 1|(0) .. (Don't )mark current time in plot with a special marker
  SetIOption(295,0);	// 1|(0) .. (Don't) draw the data only up to the time from datamanager
  SetIOption(260,640);	// initial size of the CView holding the plot
  SetIOption(261,480);	// initial size of the CView holding the plot
  SetIOption(262,3000);	// size in logical units for the plot - fixed aspect ratio
  SetIOption(263,2000);	// size in logical units for the plot - fixed aspect ratio
  SetDOption(260,15.0);	// surplus in %plotwidth from left border of the plot to left border of the window
  SetDOption(261,15.0);	// surplus in %plotheight from upper border of the plot to the upper border of the window
  SetDOption(262,20.0);	// surplus in %plotheight from lower border of the plot to the lower border of the window
  SetDOption(263,15.0);	// surplus in %plotheight from lower border of the plot to the lower border of the window
  SetIOption(278,300);	// initial size of the CView holding the plot
  SetIOption(279,200);	// initial size of the CView holding the plot
  SetIOption(265,0);	// 1|(0) .. (Don't) draw axis at origin
  SetIOption(266,1);	// 1|(0) .. (Don't) write lables for major ticks
  SetIOption(267,1);	// 1|(0) .. (Don't) write lables for minor ticks
  SetDOption(265,3.);	// percentage the axis are longer than the graph
  SetDOption(266,2.);	// size in percent of major ticks, minor are half size
  SetIOption(268,0);	// minor ticks for x-axis
  SetIOption(269,0);	// minor ticks for y-axis
  SetIOption(276,3);	// maximum digits for x-axis labels
  SetIOption(277,3);	// maximum digits for y-axis labels
  SetIOption(270,2);	// Linetype for major gridlines, x axis (0 = no line, 1 = solid, 2 = dash, 3 = dot)
  SetIOption(271,3);	// Linetype for minor gridlines, x axis (0 = no line, 1 = solid, 2 = dash, 3 = dot)
  SetIOption(272,2);	// Linetype for major gridlines, y axis (0 = no line, 1 = solid, 2 = dash, 3 = dot)
  SetIOption(273,3);	// Linetype for minor gridlines, y axis (0 = no line, 1 = solid, 2 = dash, 3 = dot)
  SetIOption(275,0);	// 1|(0) .. (Don't) draw axis at origin
  SetDOption(275,75.);	// position in % of the legend's left border
  SetDOption(276,100.);	// position in % of the legend's right border
  SetDOption(277,100.);	// position in % of the legend's upper border
  SetDOption(278,75.);	// position in % of the legend's lower border
  SetTOption(125,"snap");	// filename for the picture without extensions
  SetIOption(280,1600);	// size in pixels of the saved BMP
  SetIOption(281,1200);	// size in pixels of the saved BMP
  SetIOption(282,10);	// quality setting for the JPG encoder
  SetIOption(285,1);	// 1|(0) .. (Don't) store image as jpg
  SetIOption(286,0);	// 1|(0) .. (Don't) store image as png
  SetIOption(287,0);	// 1|(0) .. (Don't) store image as bmp
  SetIOption(288,1);	// 1|(0) .. (Don't) store image as emf
  SetDOption(230,.001);	// Continuous time delays are realized with multiple serial time discrete delays. Their period is limited by this variable.
  SetDOption(231,0.1);	// Default value of zero zone of input-output elements with static and dynamic friction. Set to positive value to get finite slope around zero to improve convergence of solver.
}
#endif

